##Patterns: E1001,W2001,E3001,E3002,E2502,E1012,E2522,E3003,E3012,E1010
---
AWSTemplateFormatVersion: "2010-09-09"
Description: A sample template
##Err: E1001
Errors:
  Catch: Missing
Parameters:
  ##Warn: W2001
  myParam:
    Type: String
    Default: String
    Description: String
Conditions:
  IsProduction: !Equals ["Prod", "Prod"]
Resources:
  ## Missing Properties
  MyEC2Instance1:
    ##Err: E3001
    Type: "AWS::EC2::Instance1"
  ##Err: E3001
  myIamProfile:
    Type: "AWS::IAM::Role"
  ## Fake Properties Key on main level
  ## Bad sub properties in BlockDeviceMappings/Ebs and NetworkInterfaces
  MyEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-2f726546"
      InstanceType: t1.micro
      ##Err: E3012
      KeyName: 1
      ##Err: E3002
      FakeKey: MadeYouLook
      IamInstanceProfile: !GetAtt RootInstanceProfile.Arn
      BlockDeviceMappings:
        -
          DeviceName: /dev/sda
          Ebs:
            VolumeType: io1
            ##Err: E1012
            Iops: !Ref pIops
            DeleteOnTermination: false
            VolumeSize: 20
            ##Err: E3002
            BadSubX2Key: Not valid
      NetworkInterfaces:
        ##Err: E3002
        - DeviceIndex:
          - "1"
          ##Err: E3002
          BadKey: true
  MyEC2Instance3:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-2f726546"
      IamInstanceProfile: !Ref RootRole
  myEc2Instance4:
    Type: AWS::EC2::Instance
    ##Err: E2522
    Properties: {}
  ## Bad Policies property in PolicyDocument
  RootRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          ##Err: E3003
          PolicyName: "root"
          ##Err: E3002
          PolicyDocument1:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "*"
                Resource: "*"
  RolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "root"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action: "*"
            Resource: "*"
      Roles:
        -
          Ref: "RootRole"
  RootInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        -
          Ref: "RootRole"

  # Bad Key under HealthCheck
  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      AvailabilityZones:
        Fn::GetAZs: ''
      Instances:
      - Ref: MyEC2Instance
      Listeners:
      - LoadBalancerPort: '80'
        ##Err: E1012
        InstancePort:
          Ref: WebServerPort
        Protocol: HTTP
      HealthCheck:
        ##Err: E3002
        FakeKey: Another fake key
        Target:
          Fn::Join:
          - ''
          - - 'HTTP:'
            ##Err: E1012
            - Ref: WebServerPort
            - "/"
        HealthyThreshold: '3'
        # Int which should be string. (No Error)
        ##Err: E3012
        UnhealthyThreshold: 5
        # Should be int (Error)
        Interval: Test
        Timeout: '5'
  SecurityGroup:
    Type: AWS::EC2::SecurityGroupIngress
    ##Err: E3003
    Properties:
      ##Err: E3012
      FromPort: Test
  conditionLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Tags:
      - Fn::If:
        - IsProduction
        - Key: Production
          ##Err: E3012
          Value: True
        - Key: Production
          ##Err: E3012
          Value: False
      ##Err: E3002
      Fn::If:
      - IsProduction
      - AvailabilityZones:
          Fn::GetAZs: ''
        Listeners:
        - Fn::If:
          - IsProduction
          - LoadBalancerPort: '443'
            InstancePort: '443'
            Protocol: HTTP
          - LoadBalancerPort: '443'
            InstancePort: '443'
            Protocol: HTTP
        HealthCheck:
          Target: HTTP:80/
          HealthyThreshold: '3'
          UnhealthyThreshold: '5'
          Interval: '30'
          Timeout: '5'
        ConnectionDrainingPolicy:
          ##Err: E3012
          Enabled: 'true'
          ##Err: E3012
          Timeout: '60'
      - AvailabilityZones:
          Fn::GetAZs: ''
        Listeners:
        - LoadBalancerPort: '80'
          InstancePort: '80'
          Protocol: HTTP
        HealthCheck:
          Target: HTTP:80/
          HealthyThreshold: '3'
          UnhealthyThreshold: '5'
          Interval: '30'
          Timeout: '5'
Outputs:
  myOutput:
    Value: !GetAtt ElasticLoadBalancer.CanonicalHostedZoneName
  myErrorOutput:
    ##Err: E1010
    Value: !GetAtt ElasticLoadBalancer.DNE
